<?php 
// $Id: count.module,v 1.1 2009/09/18 19:36:30 bharat83 Exp $ 
/**
 * @file
 *  Module to provide total number of nodes in each content type.
 *  
 * Maintainer: Bharat Sharma (bharat83)
 * Originally written by Bharat Sharma (bharat83)
 */

/**
* Display help and module information
* @param path which path of the site we're displaying help
* @param arg array that holds the current path as would be returned from arg() function
* @return help text for the path
*/
function count_help($path, $arg) {
  $output = '';  //declare your output variable
  switch ($path) {
    case "admin/help#count":
      $output = '<p>'.  t("Displays Total No. of Nodes in each Content Type") .'</p>';
      break;
  }
  return $output;
}


/**
* Implementation of hook_block
* @param string $op one of "list", "view", "save" and "configure"
* @param integer $delta code to identify the block
* @param array $edit only for "save" operation
**/
function count_block($op = 'list', $delta = 0, $edit = array()) {
global $user;
switch($op) {
case 'list':
    // Generate listing of blocks from this module, for the admin/block page
  $blocks=array();
  $block_name=get_content_type();
  for ($i = 1; $i <= count($block_name); $i++) {
      $blocks[$i]['info'] = variable_get('count_type_'. $i, 'Count Nodes '. $i);
      $blocks[$i]['cache']= BLOCK_NO_CACHE;
    }
    return $blocks;
  break;
case 'configure':
  $form['count_text_'. $delta] = array(
        '#type' => 'textfield',
        '#title' => t('Total Nodes'),
        '#description' => t('If you like to show the total number of nodes without count it through database then Enter number of visitors else remain it to default 0, If you change it without any use the block will not calculate the nodes'),
        '#default_value' => variable_get('count_text_'. $delta, '0'),
        );
  $form['count_content_type_'. $delta]=array(
        '#type' => 'select',
        '#title' => t('Select Content Type'),
        '#description' => t('select content type to count the nodes for... use this if you are not using Total Nodes text box'),
        '#options' => get_content_type(),
  );
  return $form;
      break;
case 'save':
    variable_set('count_text_'. $delta, $edit['count_text_'. $delta]);
    variable_set('count_content_type_'. $delta, $edit['count_content_type_'. $delta]);
    break;
case 'view':
  $blocks['subject'] = t('Count Node');
  $data=_count_nodes($delta);
      $blocks['content'] = theme('count_render', $data, $delta);
      return $blocks;
  }
} // function onthisdate_block

// THEME FUNCTIONS
/**
 * Implementation of hook_theme() 
 */
function count_theme() {
  return array(
    'count_render' => array(
      'arguments' => array('data' => NULL),
    ),
  );
}

/**
 * Theme function for theming quotes.
 *
 * @param $text The quote content as a string.
 * @param $origin The original source of the quote, as a string.
 * @return string An HTML themed string.
 */
function theme_count_render($data, $delta) {
$content_type=variable_get('count_content_type_'. $delta, 'page');
  $output =  "<div id='count_node'> Total ". t($content_type) ."  : ". t($data) ."</div>" ;
  return $output;
}

function _count_nodes($delta) {
$selected_count=variable_get('count_text_'. $delta, '0');
if($selected_count > 0)
$total_nodes=t($selected_count);
else {
$content_type=variable_get('count_content_type_'. $delta, 'page');
$query="Select count(nid) from  {node} where type='%s'";
$total_nodes=db_result(db_query($query, $content_type));
}
return $total_nodes;
}


function get_content_type() {
$query="Select type from {node_type}";
$result=db_query($query);
while($row=db_fetch_object($result)) {
$count_content_type_array[$row->type]=$row->type;
}
return $count_content_type_array;
}


